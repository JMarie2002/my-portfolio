name: CI
 
on:

  push:

    branches: [ "main" ]

  pull_request:

    branches: [ "main" ]
 
jobs:

  build:

    runs-on: ubuntu-latest

    env:

      AWS_REGION: ${{ secrets.AWS_REGION }}

      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}          # e.g. 405894862034.dkr.ecr.us-east-1.amazonaws.com

      ECR_REPOSITORY: portfoilo                          # <-- intentional misspelling

      VERSION_TAG: ${{ github.run_number }}

    steps:

      - uses: actions/checkout@v4
 
      - name: Configure AWS credentials

        uses: aws-actions/configure-aws-credentials@v4

        with:

          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}

          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          aws-region: ${{ secrets.AWS_REGION }}
 
      - name: Login to Amazon ECR

        id: ecr

        uses: aws-actions/amazon-ecr-login@v2
 
      - name: Ensure ECR repository exists

        run: |

          set -euo pipefail

          if aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --region "$AWS_REGION" >/dev/null 2>&1; then

            echo "ECR repo $ECR_REPOSITORY already exists."

          else

            echo "ECR repo $ECR_REPOSITORY not found. Creatingâ€¦"

            aws ecr create-repository --repository-name "$ECR_REPOSITORY" --image-scanning-configuration scanOnPush=true --region "$AWS_REGION" >/dev/null

            echo "Created $ECR_REPOSITORY"

          fi
 
      - name: Build image (multi-tag once)

        run: |

          IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY"

          docker build -t "$IMAGE:${VERSION_TAG}" -t "$IMAGE:latest" .
 
      - name: Scan with Trivy

        uses: aquasecurity/trivy-action@master

        with:

          image-ref: '${{ secrets.ECR_REGISTRY }}/_

 